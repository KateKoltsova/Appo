import{f as $,_ as m,e as w,c as P,g as v,p as x,h as S,a as y}from"./app.ccb8f526.js";const s="api",p="v1",B="register",j="oauth/login",I="oauth/refresh",L="oauth/logout",b="oauth/logout/all",k="password/forgot",T="password/reset",U="password/change",f="users",A={auth:{register:{url:`${s}/${B}`,auth:!1},login:{url:`${s}/${j}`,auth:!1},refresh:{url:`${s}/${I}`,auth:!1},logout:{url:`${s}/${L}`,auth:!1},logoutAll:{url:`${s}/${b}`,auth:!1},forgotPassword:{url:`${s}/${k}`,auth:!1},resetPassword:{url:`${s}/${T}`,auth:!1},changePassword:{url:`${s}/${U}`,auth:!1}},users:{all:{url:`${s}/${p}/${f}`,auth:!0},byId:{url:e=>`${s}/${p}/${f}/${e}`,auth:!0}}},g=$.create({headers:{"Content-Type":"application/json"}});g.interceptors.request.use(e=>{const n=e.url;function i(o,l){const t=o.split("/").filter(Boolean),a=l.split("/").filter(Boolean),u={};for(let r=0;r<t.length;r++)if(t[r].startsWith(":")){const _=t[r].substring(1);u[_]=a[r]}return u}function h(o,l){const t=o.replace(/:[^\s/]+/g,"([^/]+)").replace(/\//g,"\\/").replace(/\./g,"\\."),a=new RegExp(`^${t}`);return l.match(a)}function d(o){for(const l of Object.values(A))for(const t of Object.values(l))if(typeof t=="object"&&t.url){const a=typeof t.url=="function"?t.url(":id"):t.url;if(h(a,o)){const r=i(a,o);return{...t,params:r}}}return null}const c=d(n);if(c!=null&&c.auth){const o=localStorage.getItem("accessToken");o&&(e.headers.Authorization=`Bearer ${o}`)}return e},e=>Promise.reject(e));g.interceptors.response.use(e=>e,e=>{var n;return e.response&&e.response.status===401&&((n=e.response)==null?void 0:n.status)===401&&(console.error("Unauthorized, redirecting to login page..."),localStorage.clear(),window.location.href="/login"),Promise.reject(e)});const C=e=>(x("data-v-1788573f"),e=e(),S(),e),N={key:0,class:"loading-spinner"},z=C(()=>y("div",{class:"spinner"},null,-1)),E=[z],O={__name:"LoadingSpinner",props:{isLoading:Boolean},setup(e){return(n,i)=>e.isLoading?(w(),P("div",N,E)):v("",!0)}},q=m(O,[["__scopeId","data-v-1788573f"]]);export{q as L,g as a,A as u};
