{
    "openapi": "3.0.0",
    "info": {
        "title": "Swagger docs for Appo Beauty API",
        "description": "This is a Appo Beauty Server based on the OpenAPI 3.0 specification. \n\nSome useful links:\n- [The API repository](https://github.com/KateKoltsova/Appo)\n- [The API server](https://appobeauty-6ecbc596ee8d.herokuapp.com/api)",
        "contact": {
            "email": "kate.koltsova.work@gmail.com"
        },
        "x-copyright": "(C) Kateryna Koltsova 2023. All rights reserved.",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "https://appobeauty-6ecbc596ee8d.herokuapp.com/api",
            "description": "Production API server"
        },
        {
            "url": "https://appobeauty-6ecbc596ee8d.herokuapp.com",
            "description": "Web Interface"
        }
    ],
    "tags": [
        {
            "name": "Auth",
            "description": "Authentication and authorization"
        },
        {
            "name": "Profile",
            "description": "CRUD operations with users"
        },
        {
            "name": "Prices",
            "description": "CRUD operations with prices"
        },
        {
            "name": "Schedules",
            "description": "CRUD operations with schedules"
        },
        {
            "name": "Appointments",
            "description": "RD operations with appointments"
        },
        {
            "name": "Services",
            "description": "CRUD operations with services"
        },
        {
            "name": "Carts",
            "description": "Cart functionality"
        }
    ],
    "paths": {
        "/register": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Register new user",
                "description": "Send request with all user parameters to create new user",
                "parameters": [
                    {
                        "name": "firstname",
                        "in": "query",
                        "description": "The user firstname for login",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "Firstname"
                        }
                    },
                    {
                        "name": "lastname",
                        "in": "query",
                        "description": "The user lastname for login",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "Lastname"
                        }
                    },
                    {
                        "name": "birthdate",
                        "in": "query",
                        "description": "The user birthdate for login",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "1111-01-01"
                        }
                    },
                    {
                        "name": "phone_number",
                        "in": "query",
                        "description": "The user phone number for login",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "+380111111111"
                        }
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "The user email for login",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "email@email.com"
                        }
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "description": "The password for login",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": 11111111
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "example": {
                                    "message": "Successfully Created"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "UNPROCESSABLE CONTENT",
                        "content": {
                            "application/json": {
                                "example": {
                                    "message": "The email field must be a valid email address. (and 2 more errors)",
                                    "errors": {
                                        "email": "The email field must be a valid email address",
                                        "phone_number": [
                                            "The phone number field must be at least 13 characters",
                                            "The phone number field format is invalid"
                                        ]
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/oauth/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Get user token for log in",
                "description": "After user fill form, you may send request with user data to this route for getting access token and use that with next requests",
                "parameters": [
                    {
                        "name": "email",
                        "in": "query",
                        "description": "The user email for login",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "email@email.com"
                        }
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "description": "The password for login",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": 11111111
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Token"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "UNPROCESSABLE CONTENT",
                        "content": {
                            "application/json": {
                                "example": {
                                    "message": "These credentials do not match our records",
                                    "errors": {
                                        "email": "These credentials do not match our records"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/oauth/refresh": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Refresh user token",
                "description": "You may send refresh token to this route for get new pair access-refresh tokens, when access token is expired or another reason to update access token",
                "parameters": [
                    {
                        "name": "refresh token",
                        "in": "query",
                        "description": "The refresh token for get new access token",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "def50200df1406341509569112d62de1438c"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "example": {
                                    "data": {
                                        "token_type": "Bearer",
                                        "expires_in": 2592000,
                                        "accesss_token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9",
                                        "refresh_token": "def5020018d3951b50069ff0d3203e95c882",
                                        "id": 15
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "UNAUTHORIZED",
                        "content": {
                            "application/json": {
                                "example": {
                                    "error": "invalid_request,",
                                    "error_description": "The refresh token is invalid",
                                    "hint": "Cannot decrypt the refresh token",
                                    "message": "The refresh token is invalid"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/password/forgot": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Send to user email link for change password",
                "description": "When you send request to this route, the user with receives an email with a link to change the password, the URL that you specify in the request is used to generating the link",
                "parameters": [
                    {
                        "name": "email",
                        "in": "query",
                        "description": "The email needed change password",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "email@email.com"
                        }
                    },
                    {
                        "name": "url",
                        "in": "query",
                        "description": "URL to use for creating link for change password mail",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "https://url.com/password/reset"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK (временно отдаю токен, мне нужен для теста)",
                        "content": {
                            "application/json": {
                                "example": {
                                    "data": {
                                        "token": "32d6ba5550aba3b8e4516f8e374629044bb7f6995350ecdc53f9ca078a636ebe"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "UNPROCESSABLE CONTENT",
                        "content": {
                            "application/json": {
                                "example": {
                                    "message": "Invalid user"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/password/reset": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Change user password",
                "description": "When you send request to this route, the user with receives an email with a link to change the password, the URL that you specify in the request is used to generating the link",
                "parameters": [
                    {
                        "name": "email",
                        "in": "query",
                        "description": "User email",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "email@email.com"
                        }
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "description": "New user password",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": 11111111
                        }
                    },
                    {
                        "name": "token",
                        "in": "query",
                        "description": "Token getting from email link",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "def50200df1406341509569112d62de1438c"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "example": {
                                    "message": "Password for user email@email.com successfully changed"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "UNPROCESSABLE CONTENT",
                        "content": {
                            "application/json": {
                                "example": {
                                    "message": "Invalid token"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/oauth/logout": {
            "delete": {
                "tags": [
                    "Auth"
                ],
                "summary": "Logout user",
                "description": "Logout user",
                "security": [
                    {
                        "access_token": [
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/securitySchemes/access_token"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "example": {
                                    "message": "User successfully logout"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/oauth/logout/all": {
            "delete": {
                "tags": [
                    "Auth"
                ],
                "summary": "Logout user from all devices",
                "description": "Logout user from all devices",
                "security": [
                    {
                        "access_token": [
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/securitySchemes/access_token"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "example": {
                                    "message": "User successfully logout from all devices"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/users": {
            "get": {
                "tags": [
                    "Profile"
                ],
                "summary": "Get list of users (only admin)",
                "description": "Send request to get full list of users",
                "security": [
                    {
                        "role": [
                            "admin"
                        ],
                        "access_token": [
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "filter[role][]",
                        "in": "query",
                        "description": "User role for filtration",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "master"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Users"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/users/{user}": {
            "get": {
                "tags": [
                    "Profile"
                ],
                "summary": "Find user by ID (only own data, admin-all data)",
                "description": "Returns a specified user by ID",
                "security": [
                    {
                        "role": [
                            "master"
                        ],
                        "access_token": [
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 15
                        }
                    },
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/securitySchemes/access_token"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Users"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "NOT FOUND",
                        "content": {
                            "application/json": {
                                "example": {
                                    "message": "No query results for model [App\\Models\\User] 16"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "Profile"
                ],
                "summary": "Update user (only own data, admin-all data)",
                "description": "Update specified user profile data",
                "security": [
                    {
                        "role": [
                            "master",
                            "client"
                        ],
                        "access_token": [
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 15
                        }
                    },
                    {
                        "name": "firstname",
                        "in": "query",
                        "description": "The user firstname for login",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "Firstname"
                        }
                    },
                    {
                        "name": "lastname",
                        "in": "query",
                        "description": "The user lastname for login",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "Lastname"
                        }
                    },
                    {
                        "name": "birthdate",
                        "in": "query",
                        "description": "The user birthdate for login",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "1111-01-01"
                        }
                    },
                    {
                        "name": "phone_number",
                        "in": "query",
                        "description": "The user phone number for login",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "+380111111111"
                        }
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "The user email for login",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "email@email.com"
                        }
                    },
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/securitySchemes/access_token"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Users"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "UNPROCESSABLE CONTENT",
                        "content": {
                            "application/json": {
                                "example": {
                                    "message": "The lastname field must only contain letters",
                                    "errors": {
                                        "lastname": "The lastname field must only contain letters"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Profile"
                ],
                "summary": "Delete user (only own data, admin-all data)",
                "description": "Logout and soft deleted user",
                "security": [
                    {
                        "role": [
                            "admin"
                        ],
                        "access_token": [
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "The id that needs to be deleted",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": 15
                        }
                    },
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/securitySchemes/access_token"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "example": {
                                    "message": "User successfully deleted"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "NOT FOUND"
                    }
                }
            }
        },
        "/v1/users/{user}/prices": {
            "get": {
                "tags": [
                    "Prices"
                ],
                "summary": "Get list of prices specified master (only master)",
                "description": "Send request to get full list of prices specified master",
                "security": [
                    {
                        "role": [
                            "master"
                        ],
                        "access_token": [
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "Master ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 15
                        }
                    },
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/securitySchemes/access_token"
                        }
                    },
                    {
                        "name": "filter[category][]",
                        "in": "query",
                        "description": "Category filter",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "Nails"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "0": {
                                                    "$ref": "#/components/schemas/Prices"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Prices"
                ],
                "summary": "Create new price specified master (only master)",
                "description": "Send request to get full list of prices specified master",
                "security": [
                    {
                        "role": [
                            "master"
                        ],
                        "access_token": [
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "Master ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 15
                        }
                    },
                    {
                        "name": "service_id",
                        "in": "query",
                        "description": "Service ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 15
                        }
                    },
                    {
                        "name": "price",
                        "in": "query",
                        "description": "Cost value",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 350
                        }
                    },
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/securitySchemes/access_token"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Prices"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/users/{user}/prices/{price}": {
            "get": {
                "tags": [
                    "Prices"
                ],
                "summary": "Find price by ID (only master)",
                "description": "Returns a specified master price by ID",
                "security": [
                    {
                        "role": [
                            "master"
                        ],
                        "access_token": [
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "Master ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "price",
                        "in": "path",
                        "description": "Price id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 15
                        }
                    },
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/securitySchemes/access_token"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Prices"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "NOT FOUND",
                        "content": {
                            "application/json": {
                                "example": {
                                    "message": "No data"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "Prices"
                ],
                "summary": "Update price (only master)",
                "description": "Update specified master price",
                "security": [
                    {
                        "role": [
                            "master"
                        ],
                        "access_token": [
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "Master ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "priceId",
                        "in": "path",
                        "description": "Price ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": 1
                        }
                    },
                    {
                        "name": "price",
                        "in": "query",
                        "description": "The service cost value",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": 350
                        }
                    },
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/securitySchemes/access_token"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Prices"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "UNPROCESSABLE CONTENT",
                        "content": {
                            "application/json": {
                                "example": {
                                    "message": "The price field must only contain numbers"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Prices"
                ],
                "summary": "Delete user specified price (only master)",
                "description": "Deleted user specified price",
                "security": [
                    {
                        "role": [
                            "master"
                        ],
                        "access_token": [
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "Master ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 15
                        }
                    },
                    {
                        "name": "price",
                        "in": "path",
                        "description": "Price ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 15
                        }
                    },
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/securitySchemes/access_token"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "example": {
                                    "message": "Price successfully deleted"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "NOT FOUND"
                    }
                }
            }
        },
        "/v1/users/{user}/schedules": {
            "get": {
                "tags": [
                    "Schedules"
                ],
                "summary": "Get list of schedules specified master (only master)",
                "description": "Send request to get full list of schedules specified master",
                "security": [
                    {
                        "role": [
                            "master"
                        ],
                        "access_token": [
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "Master ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 15
                        }
                    },
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/securitySchemes/access_token"
                        }
                    },
                    {
                        "name": "filter[date][]",
                        "in": "query",
                        "description": "Date filter",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2023-01-01"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Schedules"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Schedules"
                ],
                "summary": "Create schedule specified master (only master)",
                "description": "Send request to create schedule specified master",
                "security": [
                    {
                        "role": [
                            "master"
                        ],
                        "access_token": [
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "Master ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 15
                        }
                    },
                    {
                        "name": "date",
                        "in": "query",
                        "description": "Date",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "1111-11-11"
                        }
                    },
                    {
                        "name": "time",
                        "in": "query",
                        "description": "Time",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "11:00"
                        }
                    },
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/securitySchemes/access_token"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Schedules"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/users/{user}/schedules/{schedule}": {
            "get": {
                "tags": [
                    "Schedules"
                ],
                "summary": "Find schedules by ID (only master)",
                "description": "Returns a specified master schedule by ID",
                "security": [
                    {
                        "role": [
                            "master"
                        ],
                        "access_token": [
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "Master ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "schedule",
                        "in": "path",
                        "description": "schedule id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 15
                        }
                    },
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/securitySchemes/access_token"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Schedules"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "NOT FOUND",
                        "content": {
                            "application/json": {
                                "example": {
                                    "message": "No data"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "Schedules"
                ],
                "summary": "Update schedule (only master)",
                "description": "Update specified master schedule",
                "security": [
                    {
                        "role": [
                            "master"
                        ],
                        "access_token": [
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "Master ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "scheduleId",
                        "in": "path",
                        "description": "Schedule ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": 1
                        }
                    },
                    {
                        "name": "date",
                        "in": "query",
                        "description": "The schedule date",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2023-01-01"
                        }
                    },
                    {
                        "name": "time",
                        "in": "query",
                        "description": "The schedule time",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "12:43"
                        }
                    },
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/securitySchemes/access_token"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Schedules"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Schedules"
                ],
                "summary": "Delete user specified schedule (only master)",
                "description": "Deleted user specified schedule",
                "security": [
                    {
                        "role": [
                            "master"
                        ],
                        "access_token": [
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "Master ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 15
                        }
                    },
                    {
                        "name": "schedule",
                        "in": "path",
                        "description": "schedule ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 15
                        }
                    },
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/securitySchemes/access_token"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "example": {
                                    "message": "Schedule successfully deleted"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "NOT FOUND"
                    }
                }
            }
        },
        "/v1/users/{user}/appointments": {
            "get": {
                "tags": [
                    "Appointments"
                ],
                "summary": "Get list of appointments specified client (only client)",
                "description": "Send request to get full list of appointments specified client",
                "security": [
                    {
                        "role": [
                            "client"
                        ],
                        "access_token": [
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "Client ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 15
                        }
                    },
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/securitySchemes/access_token"
                        }
                    },
                    {
                        "name": "filter[date][]",
                        "in": "query",
                        "description": "Date filter",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2023-01-01"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Appointments"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Appointments"
                ],
                "summary": "Store list of appointments from cart specified user (only auth users)",
                "description": "Send request to store list of appointments from cart specified user",
                "security": [
                    {
                        "role": [
                            "client,master"
                        ],
                        "access_token": [
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "Client ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 15
                        }
                    },
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/securitySchemes/access_token"
                        }
                    },
                    {
                        "name": "payment",
                        "in": "query",
                        "description": "Way to pay",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "full",
                            "enum": [
                                "full",
                                "prepayment"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "example": "Appointment successfully store"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "BAD REQUEST",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "example": "Bad request"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/users/{user}/appointments/{appoitment}": {
            "get": {
                "tags": [
                    "Appointments"
                ],
                "summary": "Find appointments by ID (only client)",
                "description": "Returns a specified client appointment by ID",
                "security": [
                    {
                        "role": [
                            "client"
                        ],
                        "access_token": [
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "Client ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "appointment",
                        "in": "path",
                        "description": "appointment id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 15
                        }
                    },
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/securitySchemes/access_token"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Appointments"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "NOT FOUND",
                        "content": {
                            "application/json": {
                                "example": {
                                    "message": "No data"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Appointments"
                ],
                "summary": "Delete client specified appointment (only client)",
                "description": "Deleted client specified appointment",
                "security": [
                    {
                        "role": [
                            "client"
                        ],
                        "access_token": [
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "Client ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 15
                        }
                    },
                    {
                        "name": "appointment",
                        "in": "path",
                        "description": "appointment ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 15
                        }
                    },
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/securitySchemes/access_token"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "example": {
                                    "message": "Appointment successfully deleted"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "NOT FOUND"
                    }
                }
            }
        },
        "/v1/services": {
            "get": {
                "tags": [
                    "Services"
                ],
                "summary": "Get list of services (only admin, master)",
                "description": "You can get full list of services",
                "security": [
                    {
                        "access_token": [
                            "create:users",
                            "read:users",
                            "update:users",
                            "delete:users"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/securitySchemes/access_token"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "example": {
                                    "data": {
                                        "categories": [
                                            "Nails",
                                            "Brows",
                                            "Lashes"
                                        ],
                                        "services": [
                                            {
                                                "id": 1,
                                                "title": "Eyelash extension classic",
                                                "category": "Lashes"
                                            },
                                            {
                                                "id": 1,
                                                "title": "Eyelash extension 2D-3D",
                                                "category": "Lashes"
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/users/{user}/carts": {
            "get": {
                "tags": [
                    "Carts"
                ],
                "summary": "Get list of cart items specified user (only auth)",
                "description": "Send request to get full list of cart items specified user",
                "security": [
                    {
                        "role": [
                            "client",
                            "master"
                        ],
                        "access_token": [
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "Client ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 15
                        }
                    },
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/securitySchemes/access_token"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "items": {
                                                    "properties": {
                                                        "0": {
                                                            "$ref": "#/components/schemas/Carts"
                                                        },
                                                        "1": {
                                                            "$ref": "#/components/schemas/Carts"
                                                        },
                                                        "...": {},
                                                        "n": {
                                                            "$ref": "#/components/schemas/Carts"
                                                        }
                                                    }
                                                },
                                                "totalSum": {
                                                    "type": "integer",
                                                    "example": 780
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Carts"
                ],
                "summary": "Add item to the cart specified user (only auth)",
                "description": "Send request to add item to the cart items specified user",
                "security": [
                    {
                        "role": [
                            "client",
                            "master"
                        ],
                        "access_token": [
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 15
                        }
                    },
                    {
                        "name": "schedule_id",
                        "in": "query",
                        "description": "schedule_id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 15
                        }
                    },
                    {
                        "name": "service_id",
                        "in": "query",
                        "description": "service_id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 15
                        }
                    },
                    {
                        "name": "price_id",
                        "in": "query",
                        "description": "price_id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 15
                        }
                    },
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/securitySchemes/access_token"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "items": {
                                                    "properties": {
                                                        "0": {
                                                            "$ref": "#/components/schemas/Carts"
                                                        },
                                                        "1": {
                                                            "$ref": "#/components/schemas/Carts"
                                                        },
                                                        "...": {},
                                                        "n": {
                                                            "$ref": "#/components/schemas/Carts"
                                                        }
                                                    }
                                                },
                                                "totalSum": {
                                                    "type": "integer",
                                                    "example": 780
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "BAD REQUEST",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You already have the same date-time in the cart"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/users/{user}/carts/{cart}": {
            "delete": {
                "tags": [
                    "Carts"
                ],
                "summary": "Delete cart item specified user (only auth)",
                "description": "Deleted cart item specified user cart item",
                "security": [
                    {
                        "role": [
                            "client",
                            "master"
                        ],
                        "access_token": [
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 15
                        }
                    },
                    {
                        "name": "cart",
                        "in": "path",
                        "description": "cart ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 15
                        }
                    },
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/securitySchemes/access_token"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "example": {
                                    "message": "Cart item successfully deleted"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "NOT FOUND"
                    }
                }
            }
        },
        "/v1/users/{user}/checkout": {
            "get": {
                "tags": [
                    "Carts"
                ],
                "summary": "Checkout carts specified user (only auth)",
                "description": "Send request to block cart items by specified user and chose way to pay",
                "security": [
                    {
                        "role": [
                            "client",
                            "master"
                        ],
                        "access_token": [
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "Client ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 15
                        }
                    },
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "Access token",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/securitySchemes/access_token"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "items": {
                                                    "$ref": "#/components/schemas/Carts"
                                                },
                                                "totalSum": {
                                                    "properties": {
                                                        "full": {
                                                            "type": "integer",
                                                            "example": 780
                                                        },
                                                        "prepayment": {
                                                            "type": "integer",
                                                            "example": 200
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/schedules": {
            "get": {
                "tags": [
                    "Schedules"
                ],
                "summary": "Get list of available schedules (all users)",
                "description": "Send request to get full list of available schedules",
                "security": [
                    {
                        "role": [
                            "master,client"
                        ],
                        "access_token": [
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "filter[date][]",
                        "in": "query",
                        "description": "Date filter",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2023-01-01"
                        }
                    },
                    {
                        "name": "filter[service_id][]",
                        "in": "query",
                        "description": "Service filter",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "filter[category][]",
                        "in": "query",
                        "description": "Category filter",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "Nails"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "0": {
                                                    "properties": {
                                                        "master_id": {
                                                            "example": 1
                                                        },
                                                        "master_firstname": {
                                                            "example": "Firstname"
                                                        },
                                                        "master_lastname": {
                                                            "example": "Lastname"
                                                        },
                                                        "schedules": {
                                                            "properties": {
                                                                "0": {
                                                                    "properties": {
                                                                        "schedule_id": {
                                                                            "example": 1
                                                                        },
                                                                        "date": {
                                                                            "example": "2023-11-11"
                                                                        },
                                                                        "time": {
                                                                            "example": "11:11:11"
                                                                        },
                                                                        "status": {
                                                                            "example": "available"
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "prices": {
                                                            "properties": {
                                                                "0": {
                                                                    "properties": {
                                                                        "service_id": {
                                                                            "example": 1
                                                                        },
                                                                        "price_id": {
                                                                            "example": 1
                                                                        },
                                                                        "title": {
                                                                            "example": "Eyelash extension classic"
                                                                        },
                                                                        "category": {
                                                                            "example": "Lashes"
                                                                        },
                                                                        "price": {
                                                                            "example": 740
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "categories": {
                                                            "properties": {
                                                                "0": {
                                                                    "example": [
                                                                        "Nails",
                                                                        "Lashes",
                                                                        "Brows"
                                                                    ]
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Users": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 15
                    },
                    "firstname": {
                        "type": "string",
                        "example": "FirstName"
                    },
                    "lastname": {
                        "type": "string",
                        "example": "LastName"
                    },
                    "birthdate": {
                        "type": "string",
                        "example": "1111-01-01"
                    },
                    "email": {
                        "type": "string",
                        "example": "email@email.com"
                    },
                    "phone_number": {
                        "type": "string",
                        "example": "+380111111111"
                    },
                    "role": {
                        "type": "string",
                        "example": "master",
                        "enum": [
                            "master",
                            "client",
                            "admin"
                        ]
                    }
                }
            },
            "Roles": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 2
                    },
                    "role": {
                        "type": "string",
                        "example": "client",
                        "enum": [
                            "client",
                            "master",
                            "admin"
                        ]
                    }
                }
            },
            "Services": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "category": {
                        "type": "string",
                        "example": "Brows",
                        "enum": [
                            "Nails",
                            "Lashes",
                            "Brows"
                        ]
                    },
                    "title": {
                        "type": "string",
                        "example": "Brow coloring"
                    }
                }
            },
            "Prices": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "title": {
                        "type": "string",
                        "example": "Brows coloring"
                    },
                    "category": {
                        "type": "string",
                        "example": "Brows"
                    },
                    "price": {
                        "type": "integer",
                        "example": 250
                    }
                }
            },
            "Schedules": {
                "type": "object",
                "properties": {
                    "schedule_id": {
                        "type": "integer",
                        "example": 10
                    },
                    "date": {
                        "type": "string",
                        "example": "1111-01-01"
                    },
                    "time": {
                        "type": "string",
                        "example": "00-00-00"
                    },
                    "status": {
                        "type": "string",
                        "example": "unavailable",
                        "enum": [
                            "available",
                            "unavailable"
                        ]
                    },
                    "appointment": {
                        "properties": {
                            "appointment_id": {
                                "type": "integer",
                                "example": "10"
                            },
                            "firstname": {
                                "type": "string",
                                "example": "Firstname"
                            },
                            "lastname": {
                                "type": "string",
                                "example": "Lastname"
                            },
                            "email": {
                                "type": "string",
                                "example": "email@email.com"
                            },
                            "phone_number": {
                                "type": "string",
                                "example": "+380111111111"
                            },
                            "title": {
                                "type": "string",
                                "example": "Brows coloring"
                            },
                            "category": {
                                "type": "string",
                                "example": "Brows"
                            },
                            "sum": {
                                "type": "integer",
                                "example": 250
                            },
                            "payment": {
                                "type": "string",
                                "example": "full",
                                "enum": [
                                    "prepay",
                                    "full"
                                ]
                            }
                        }
                    }
                }
            },
            "Appointments": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 210
                    },
                    "schedule_id": {
                        "type": "integer",
                        "example": 210
                    },
                    "service_id": {
                        "type": "integer",
                        "example": 210
                    },
                    "sum": {
                        "type": "integer",
                        "example": 250
                    },
                    "payment": {
                        "type": "string",
                        "example": "full",
                        "enum": [
                            "prepay",
                            "full"
                        ]
                    },
                    "title": {
                        "type": "string",
                        "example": "Brows coloring"
                    },
                    "category": {
                        "type": "string",
                        "example": "Brows"
                    },
                    "master_firstname": {
                        "type": "string",
                        "example": "Firstname"
                    },
                    "master_lastname": {
                        "type": "string",
                        "example": "Lastname"
                    },
                    "date": {
                        "type": "string",
                        "example": "1111-01-01"
                    },
                    "time": {
                        "type": "string",
                        "example": "00-00-00"
                    }
                }
            },
            "Carts": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 210
                    },
                    "schedule_id": {
                        "type": "integer",
                        "example": 210
                    },
                    "service_id": {
                        "type": "integer",
                        "example": 210
                    },
                    "price_id": {
                        "type": "integer",
                        "example": 210
                    },
                    "price": {
                        "type": "integer",
                        "example": 250
                    },
                    "title": {
                        "type": "string",
                        "example": "Brows coloring"
                    },
                    "category": {
                        "type": "string",
                        "example": "Brows"
                    },
                    "master_firstname": {
                        "type": "string",
                        "example": "Firstname"
                    },
                    "master_lastname": {
                        "type": "string",
                        "example": "Lastname"
                    },
                    "date": {
                        "type": "string",
                        "example": "1111-01-01"
                    },
                    "time": {
                        "type": "string",
                        "example": "00-00-00"
                    },
                    "message?": {
                        "type": "string",
                        "example": "Schedule already unavailable"
                    }
                }
            },
            "Token": {
                "properties": {
                    "token_type": {
                        "example": "Bearer"
                    },
                    "expires_in": {
                        "example": "2592000"
                    },
                    "access_token": {
                        "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9"
                    },
                    "refresh_token": {
                        "example": "def5020018d3951b50069ff0d3203e95c882"
                    },
                    "id": {
                        "example": 15
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "access_token": {
                "type": "apiKey",
                "name": "authorization",
                "in": "header",
                "flows": {
                    "authorizationCode": {
                        "authorizationUrl": "https://appobeauty-6ecbc596ee8d.herokuapp.com/api/oauth/login",
                        "scopes": {
                            "master": "master permissions",
                            "client": "client permissions",
                            "admin": "admin permissions"
                        }
                    }
                },
                "scheme": "bearer"
            }
        }
    }
}
